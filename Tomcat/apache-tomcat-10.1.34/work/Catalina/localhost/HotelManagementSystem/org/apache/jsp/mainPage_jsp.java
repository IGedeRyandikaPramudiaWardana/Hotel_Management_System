/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-01-24 06:04:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class mainPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
    String akses = (String) session.getAttribute("akses");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("        <title>Halaman Utama</title>\r\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"> <!-- Masukkan file CSS ini -->\r\n");
      out.write("        \r\n");
      out.write("        <style>\r\n");
      out.write("            /* General Styles */\r\n");
      out.write("            body {\r\n");
      out.write("                font-family: 'Roboto', sans-serif;\r\n");
      out.write("                margin: 0;\r\n");
      out.write("                padding: 0;\r\n");
      out.write("                background-color: #f4f4f4;\r\n");
      out.write("                color: #3498db;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            h1 {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                margin-top: 50px;\r\n");
      out.write("                color: #444;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* Header */\r\n");
      out.write("            .header {\r\n");
      out.write("                position: fixed;\r\n");
      out.write("                top: 0;\r\n");
      out.write("                left: 0;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                background-color: #3498db;\r\n");
      out.write("                color: #fff;\r\n");
      out.write("                padding: 20px 0;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                font-size: 24px;\r\n");
      out.write("                z-index: 1000;\r\n");
      out.write("                height: 70px; /* Sesuaikan tinggi header */\r\n");
      out.write("                box-sizing: border-box; /* Pastikan padding masuk dalam ukuran elemen */\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* Sidebar */\r\n");
      out.write("            .sidebar {\r\n");
      out.write("                position: fixed;\r\n");
      out.write("                top: 0; /* Posisi sidebar dimulai setelah header */\r\n");
      out.write("                left: -250px; /* Hidden by default */\r\n");
      out.write("                width: 250px;\r\n");
      out.write("                height: 100%; /* Sesuaikan tinggi sidebar agar menutupi sisa layar */\r\n");
      out.write("                background-color: #3498db;\r\n");
      out.write("                color: #fff;\r\n");
      out.write("                overflow-y: auto;\r\n");
      out.write("                transition: left 0.3s ease;\r\n");
      out.write("                z-index: 1001; /* Tetap di depan konten tetapi di bawah header */\r\n");
      out.write("                box-sizing: border-box; /* Pastikan padding masuk dalam ukuran elemen */\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .sidebar a {\r\n");
      out.write("                display: block;\r\n");
      out.write("                padding: 10px 20px;\r\n");
      out.write("                color: #ddd;\r\n");
      out.write("                text-decoration: none;\r\n");
      out.write("                border-bottom: 1px solid #3498db;\r\n");
      out.write("                box-sizing: border-box; /* Pastikan padding tidak menyebabkan pergeseran */\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .sidebar a:hover {\r\n");
      out.write("                background-color: #2c88c5;\r\n");
      out.write("                color: #fff;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .sidebar .close-btn {\r\n");
      out.write("                position: absolute;\r\n");
      out.write("                top: 10px;\r\n");
      out.write("                right: 10px;\r\n");
      out.write("                font-size: 50px;\r\n");
      out.write("                margin-right: 10px;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("                color: #fff;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* Open Sidebar Button */\r\n");
      out.write("            .open-sidebar-btn {\r\n");
      out.write("                position: fixed;\r\n");
      out.write("                top: 10px;\r\n");
      out.write("                left: 20px;\r\n");
      out.write("                background-color: #3498db;\r\n");
      out.write("                color: #fff;\r\n");
      out.write("                padding: 5px 10px;\r\n");
      out.write("                border: none;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("                z-index: 1002; /* Tombol berada di depan elemen lain */\r\n");
      out.write("                border-radius: 5px;\r\n");
      out.write("                font-size: 20px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .open-sidebar-btn:hover {\r\n");
      out.write("                background-color: #2c88c5;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .sidebar .pilihanMenu {\r\n");
      out.write("                margin-top: 55px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* Content Area */\r\n");
      out.write("            .content {\r\n");
      out.write("                margin: 100px 20px;\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("                background-color: #fff;\r\n");
      out.write("                border-radius: 8px;\r\n");
      out.write("                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* Sidebar Active State */\r\n");
      out.write("            .sidebar.active {\r\n");
      out.write("                left: 0; /* Sidebar muncul saat aktif */\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* Overlay */\r\n");
      out.write("            .overlay {\r\n");
      out.write("                position: fixed;\r\n");
      out.write("                top: 0;\r\n");
      out.write("                left: 0;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                height: 100%;\r\n");
      out.write("                background-color: rgba(0, 0, 0, 0.5); /* Transparan hitam */\r\n");
      out.write("                z-index: 1000;\r\n");
      out.write("                display: none; /* Sembunyikan overlay secara default */\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .overlay.active {\r\n");
      out.write("                display: block; /* Tampilkan overlay saat aktif */\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <!-- Header -->\r\n");
      out.write("        <div class=\"header\">Hotel Management System</div>\r\n");
      out.write("        ");
 if ("admin".equals(akses)) { 
      out.write("\r\n");
      out.write("            <p>Anda login sebagai Admin. Anda memiliki akses penuh ke semua fitur.</p>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("            <p>Anda login sebagai User. Anda memiliki akses terbatas.</p>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        <!-- Tombol Buka Sidebar -->\r\n");
      out.write("        <button class=\"open-sidebar-btn\" onclick=\"toggleSidebar()\">☰ Menu</button>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Sidebar -->\r\n");
      out.write("        <div class=\"sidebar\" id=\"sidebar\">\r\n");
      out.write("            <div class=\"pilihanMenu\">\r\n");
      out.write("                <!-- Menu Main Page -->\r\n");
      out.write("                <a onclick=\"location.href='mainPageServlet'\">Main Page</a>\r\n");
      out.write("                <a onclick=\"location.href='kelolaKamarServlet'\">Kelola Kamar</a>\r\n");
      out.write("                <a onclick=\"location.href='CheckINHandler'\">Check-In</a>\r\n");
      out.write("                <a href=\"#\" onclick=\"loadContent('checkOut.jsp')\">Check-Out</a>\r\n");
      out.write("                <a href=\"#\" onclick=\"loadContent('detailPembayaran.jsp')\">Detail Pembayaran</a>\r\n");
      out.write("                <a onclick=\"location.href='kelolaCheckIN.jsp'\">Kelola Check-IN</a>\r\n");
      out.write("                <a href=\"login.jsp\">Logout</a>\r\n");
      out.write("                ");
 if ("admin".equals(akses)) { 
      out.write("\r\n");
      out.write("                    <!-- Menu khusus admin -->\r\n");
      out.write("                    <a href=\"#\" onclick=\"loadContent('adminPage.jsp')\">Admin</a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Overlay -->\r\n");
      out.write("        <div class=\"overlay\" id=\"overlay\" onclick=\"toggleSidebar()\"></div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Area Konten -->\r\n");
      out.write("        <div class=\"content\" id=\"content-area\">\r\n");
      out.write("            <h1>Selamat Datang di Hotel Management System</h1>\r\n");
      out.write("            <p>Konten halaman utama akan ditampilkan di sini.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Script untuk toggle Sidebar -->\r\n");
      out.write("        <script>\r\n");
      out.write("            function toggleSidebar() {\r\n");
      out.write("                const sidebar = document.getElementById('sidebar');\r\n");
      out.write("                const overlay = document.getElementById('overlay');\r\n");
      out.write("                sidebar.classList.toggle('active');\r\n");
      out.write("                overlay.classList.toggle('active');\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Fungsi untuk memuat halaman JSP secara dinamis\r\n");
      out.write("            function loadContent(page) {\r\n");
      out.write("                const xhttp = new XMLHttpRequest();\r\n");
      out.write("                xhttp.onreadystatechange = function() {\r\n");
      out.write("                    if (this.readyState == 4 && this.status == 200) {\r\n");
      out.write("                        document.getElementById(\"content-area\").innerHTML = this.responseText;\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("                xhttp.open(\"GET\", page, true);\r\n");
      out.write("                xhttp.send();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Fungsi untuk menampilkan kembali halaman utama\r\n");
      out.write("            function loadMainPage() {\r\n");
      out.write("                document.getElementById(\"content-area\").innerHTML = `\r\n");
      out.write("                    <h1>Selamat Datang di Hotel Management System</h1>\r\n");
      out.write("                    <p>Konten halaman utama akan ditampilkan di sini.</p>\r\n");
      out.write("                `;\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("            \r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
